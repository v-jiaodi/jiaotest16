// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// <auto-generated />
#nullable enable

using System.Text.Json;
using System.Text.Json.Serialization;

namespace TypeSpec.Helpers.JsonConverters
{
    /// <summary>
    /// Constrains an array of strings
    /// </summary>
    public class StringArrayConstraintAttribute : ArrayConstraintAttribute<string>
    {
        int? _minItemLength = null, _maxItemLength = null;
        public StringArrayConstraintAttribute() : base()
        {
        }

        public int MinItemLength { get { return _minItemLength.HasValue ? _minItemLength.Value : 0; } set { _minItemLength = value; } }
        public int MaxItemLength { get { return _maxItemLength.HasValue ? _maxItemLength.Value : 0; } set { _maxItemLength = value; } }
        public string? Pattern { get; set; }

        override public JsonConverter<string[]> CreateConverter(Type typeToConvert)
        {
            var result = base.CreateConverter(typeToConvert) as ConstrainedArrayConverter<string>;
            result!.InnerConverterFactory = (c, o) => new StringJsonConverter(MinItemLength, MaxItemLength, Pattern, o);
            return result;
        }
    }
}